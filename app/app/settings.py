"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'unfold',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'social_django',
    'widget_tweaks',
]

UNFOLD = {
    "SITE_TITLE": "Gracefully Beauty Admin",
    "SITE_HEADER": "Kursovaya Gracefully Beauty",
    "SITE_ICON": "/static/images/logo+description.svg",
    "SHOW_HISTORY": True,
    "DARK_MODE": True,
    "COLORS": {
        "primary": {
            500: "#8ec5fc",
        },
        "secondary": {
            500: "#2e8b57",
        },
        "accent": {
            500: "#b22222",
        },
    },
}
# SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'default-secret-key-for-development') # Для продакшена лучше использовать переменные окружения:

# Для генерации нового SECRET_KEY можно использовать:

# from django.core.management.utils import get_random_secret_key
# print(get_random_secret_key())

# Google OAuth2 settings
# Social auth settings
SOCIAL_AUTH_URL_NAMESPACE = 'social'
# Дополнительные настройки для social-auth-app-django
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'main.pipeline.set_auth_provider_google',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',  # Добавлен middleware
]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

# Social auth settings
SOCIAL_AUTH_URL_NAMESPACE = 'social'
# LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'main'
# LOGOUT_URL = 'logout'
LOGOUT_REDIRECT_URL = 'main'

# Настройки сессий
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 1209600  # 2 недели
SESSION_COOKIE_HTTPONLY = True
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_SECURE = False  # ← ДОЛЖНО БЫТЬ False для локальной разработки!
CSRF_COOKIE_SECURE = False     # ← ДОЛЖНО БЫТЬ False для локальной разработки!

AUTH_USER_MODEL = 'auth.User'

# Важно: для локальной разработки отключаем HTTPS требования
# SESSION_COOKIE_SECURE = False  # Изменено для локальной разработки
# CSRF_COOKIE_SECURE = False    # Изменено для локальной разработки

# Добавьте эти настройки
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

# Важно: добавьте все возможные URI перенаправления
SOCIAL_AUTH_ALLOWED_REDIRECT_URIS = [
    'http://127.0.0.1:8000/social/complete/google-oauth2/',
    'http://localhost:8000/social/complete/google-oauth2/',
    'http://127.0.0.1:8000/complete/google-oauth2/',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        'OPTIONS': {
            'user_attributes': ('username', 'email'),
            'max_similarity': 0.7,
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Добавляем русские сообщения для валидации паролей
PASSWORD_VALIDATORS_HELP_TEXTS = {
    'UserAttributeSimilarityValidator': 'Пароль слишком похож на имя пользователя или другие ваши личные данные.',
    'MinimumLengthValidator': 'Пароль должен содержать как минимум 8 символов.',
    'CommonPasswordValidator': 'Этот пароль слишком простой.',
    'NumericPasswordValidator': 'Пароль не может состоять только из цифр.',
}


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'  # ← Русский язык для всего проекта и админки

TIME_ZONE = 'Europe/Moscow'  # ← Московское время

USE_I18N = True
USE_L10N = True  # ← Включить локализацию форматов дат/времени/чисел
USE_TZ = True

LANGUAGES = [
    ('ru', 'Русский'),
    ('en', 'English'),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # Добавьте путь к вашим статическим файлам
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
